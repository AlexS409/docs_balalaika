#############################
Протокол обмена
#############################

=============================
Общие сведения
=============================

Головное устройство, использует для передачи информации бинарный протокол. Общая структура пакета данного протокола представлена в Таблице ниже 

+-----------+-------------+----------------+---------------+----------------------------------------------------------------+
| Байт #    | Поле        | Тип            | Значение      | Описание                                                       |
+===========+=============+================+===============+================================================================+
| 0         | start_byte  | uint8_t        | 0xAA          | Стартовый байт. Всегда равен 0xAA                              |
+-----------+-------------+----------------+---------------+----------------------------------------------------------------+
| 1         | id          | uint8_t        | 0xXX          | Идентификатор получателя пакета                                |
+-----------+-------------+----------------+---------------+----------------------------------------------------------------+
| 2         | type        | uint8_t        | 0xXX          | Тип пакета                                                     |
+-----------+-------------+----------------+---------------+----------------------------------------------------------------+
| ...       | data        | ...            | ...           | Блок данных (зависит от типа пакета)                           |
+-----------+-------------+----------------+---------------+----------------------------------------------------------------+
| N         | checksum    | uint8_t        | 0xXX          | Котрольная сумма пакета - младший байт суммы всех байтов пакета|
+-----------+-------------+----------------+---------------+----------------------------------------------------------------+

Для обнаружения начала пакета с данными, используется стартовый байт **0xAA**. Следующим идёт байт с идентификатором получателя данного пакета, а затем байт с кодом типа пакета. Далее находятся данные, формат которых зависит от типа пакета.
Данные, для передачи которых требуется больше одного байта (*uint16_t*, *uint32_t*) передаются в формате **little endian**. Выбор данного формата позволяет обойтись без дополнительных конвертаций при использовании платформ x86, AVR и ARM.
В последнем байте пакета содержится контрольная сумма. 

Пакеты бывают двух типов:

1. Пакет типа "***Запрос***"

2. Пакет типа "***Ответ***"

Пары Запрос-Ответ специфичны для каждого типа устройства, которое может работать в данной сети:

* Головное устройство;

* Датчик ФПГ;

* Датчик двигательной активности;

* Датчик температуры.

=============================
Формат запроса
=============================



=============================
Формат ответа
=============================



=============================
Описание общих полей
=============================

*****************************
Поле "Стартовый байт" - start_byte
*****************************



*****************************
Поле "Идентификатор получателя пакета" - id
*****************************



*****************************
Поле "Тип пакета" - type
*****************************




*****************************
Поле "Контрольная сумма пакета" - checksum
*****************************





